-- MySQL Script generated by MySQL Workbench
-- Wed Apr 26 20:28:42 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema discord
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema discord
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `discord` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
-- -----------------------------------------------------
-- Schema playerdata
-- -----------------------------------------------------
USE `discord` ;

-- -----------------------------------------------------
-- Table `discord`.`discordEvent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`discordEvent` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL,
  `event_name` VARCHAR(50) NOT NULL,
  `active` TINYINT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_event` (`event_name` ASC) VISIBLE)
ENGINE = InnoDB
AUTO_INCREMENT = 3
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `discord`.`discordVerification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`discordVerification` (
  `Entry` INT NOT NULL AUTO_INCREMENT,
  `Discord_id` BIGINT NOT NULL,
  `Player_id` INT NOT NULL,
  `primary_rsn` TINYINT(1) NOT NULL DEFAULT '0',
  `Code` TEXT NOT NULL,
  `Verified_status` TINYINT(1) NOT NULL DEFAULT '0',
  `token_used` INT NULL DEFAULT NULL,
  PRIMARY KEY (`Entry`),
  UNIQUE INDEX `idx_discordID_playerID` USING BTREE (`Discord_id`, `Player_id`) VISIBLE,
  INDEX `FK_real_players` (`Player_id` ASC) VISIBLE,
  INDEX `FK_token_used` (`token_used` ASC) VISIBLE
);


-- -----------------------------------------------------
-- Table `discord`.`discordEventParticipant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`discordEventParticipant` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP NULL DEFAULT NULL,
  `event_id` INT UNSIGNED NOT NULL,
  `verification_id` INT NOT NULL,
  `participating` TINYINT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `unique_participant` (`event_id` ASC, `verification_id` ASC) VISIBLE,
  INDEX `verification_id` (`verification_id` ASC) VISIBLE,
  CONSTRAINT `discordEventParticipant_ibfk_1`
    FOREIGN KEY (`event_id`)
    REFERENCES `discord`.`discordEvent` (`id`),
  CONSTRAINT `discordEventParticipant_ibfk_2`
    FOREIGN KEY (`verification_id`)
    REFERENCES `discord`.`discordVerification` (`Entry`)
);


-- -----------------------------------------------------
-- Table `discord`.`discord_slayer_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`discord_slayer_task` (
  `entry_id` INT NOT NULL AUTO_INCREMENT,
  `player_id` INT NOT NULL,
  `current_slayer_task` INT NOT NULL,
  `slayer_count_remaining` INT NOT NULL,
  `points_for_completion` INT NOT NULL,
  `total_slayer_points` INT NOT NULL,
  PRIMARY KEY (`entry_id`),
  INDEX `player_id` (`player_id` ASC) VISIBLE,
  INDEX `current_slayer_task` (`current_slayer_task` ASC) VISIBLE
);


-- -----------------------------------------------------
-- Table `discord`.`export_links`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`export_links` (
  `id` BIGINT NOT NULL,
  `time_created` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `time_redeemed` TIMESTAMP NULL DEFAULT NULL,
  `discord_id` BIGINT NOT NULL,
  `url_text` VARCHAR(12) NULL DEFAULT NULL,
  `file_name` TEXT NULL DEFAULT NULL,
  `is_csv` TINYINT NULL DEFAULT NULL,
  `is_excel` TINYINT NULL DEFAULT NULL,
  `is_redeemed` TINYINT NULL DEFAULT '0'
);


-- -----------------------------------------------------
-- Table `discord`.`labels_submitted`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`labels_submitted` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Label` TEXT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `idx_unique_label` USING BTREE (`Label`(100)) VISIBLE
);


-- -----------------------------------------------------
-- Table `discord`.`players_submitted`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`players_submitted` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Players` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `idx_unique_players` USING BTREE (`Players`(12)) VISIBLE
);


-- -----------------------------------------------------
-- Table `discord`.`playerlabels_submitted`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discord`.`playerlabels_submitted` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Player_ID` INT NOT NULL,
  `Label_ID` INT NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `idx_player_label` USING BTREE (`Player_ID`, `Label_ID`) VISIBLE,
  INDEX `FK_unique_labels` (`Label_ID` ASC) VISIBLE,
  CONSTRAINT `FK_unique_labels`
    FOREIGN KEY (`Label_ID`)
    REFERENCES `discord`.`labels_submitted` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `FK_unique_players`
    FOREIGN KEY (`Player_ID`)
    REFERENCES `discord`.`players_submitted` (`ID`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT
);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
